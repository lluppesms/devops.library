# ----------------------------------------------------------------------------------------------------
# Template to build Azure Function and create artifacts
# ----------------------------------------------------------------------------------------------------
parameters: 
- name: variableGroupName
  default:  'myVariableGroup'
- name: environmentName
  default:  'DEV'

# ----------------------------------------------------------------------------------------------------
jobs:
- deployment: InitializeBuild${{ parameters.environmentName }}Function
  displayName: Initialize ${{ parameters.environmentName }} Build Function
  environment: ${{ parameters.environmentName }}

- job: Build${{ parameters.environmentName }}Function
  displayName: Build ${{ parameters.environmentName }} Function
  
  variables:
    - group: ${{ parameters.variableGroupName }}
    - name: workingDirectory
      value: '$(System.DefaultWorkingDirectory)/src/FunctionApp'

  steps:
  - bash: |
      echo "Build.ArtifactStagingDirectory=$(Build.ArtifactStagingDirectory)"
      echo "System.DefaultWorkingDirectory=$(System.DefaultWorkingDirectory)"
      echo "Build.BuildId=$(Build.BuildId)"
      echo "appName=$(appName)"
      tree $(System.DefaultWorkingDirectory)
    continueOnError: true
    displayName: 'Display Variables'

  - task: UsePythonVersion@0
    displayName: 'Set Python Version'
    inputs:
      versionSpec: 3.9

  # removed because this step isn't used by this project...
  # - bash: |
  #     cd $(workingDirectory)
  #     if [ -f extensions.csproj ]
  #     then
  #         echo "Building extensions.csproj file"
  #         dotnet build extensions.csproj --output ./bin
  #     else
  #         echo "No extensions.csproj file found!"
  #     fi
  #   displayName: 'Build extensions'

  - bash: |
      cd $(workingDirectory)
      tree
      pip install setuptools
      pip install --target="./.python_packages/lib/site-packages" -r ./requirements.txt
    displayName: 'Install Dependencies'

  - task: ArchiveFiles@2
    displayName: 'Build Artifact'
    inputs:
      rootFolderOrFile: '$(workingDirectory)'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/App.zip'
      replaceExistingArchive: true

  # removed because this step is not needed (?)
  # - publish: $(Build.ArtifactStagingDirectory)/App.zip
  #   displayName: 'Upload package'
  #   artifact: App

  - task: PublishBuildArtifacts@1
    displayName: 'Save Artifact'
