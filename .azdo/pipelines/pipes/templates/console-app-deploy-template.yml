# ------------------------------------------------------------------------------------------------------------------------
# Pipeline to build Test Utility; compiles for both Windows (x64) and Linux; copies EXE to storage for downloading ease
# ------------------------------------------------------------------------------------------------------------------------
# Note 1: In order to sign the code, this job needs the VariableGroup "CodeSigning" to work 
#   The "CodeSigning" Variable Group should have these values:
#     SubscriptionName: <ServiceConnectionName -> SubscriptionName -> for AzFileCopy>
#     KeyVaultUrl: https://<yourCertVaultName>.vault.azure.net/
#     CertName: <Signing Cert Name>
#     SigningAppRegAppId: <App Id that can read the vault>
#     SigningAppRegClientSecret: <secret>
#     ActiveDirectoryTenantId: <AD Tenant for the App Id>
#     TimestampUrl: http://timestamp.digicert.com
# ------------------------------------------------------------------------------------------------------------------------
# Note 2: To add variable group to Pipeline: go to Edit -> Edit Triggers to open detail editor -> add via Variables tab
# ------------------------------------------------------------------------------------------------------------------------
# Note 3: In order for AzFileCopy to work, you need to find the account that runs this pipeline, then add account
#   to the storage account role "Storage Blob Data Owner"
# ------------------------------------------------------------------------------------------------------------------------
# Note 4: To create this variable group, open a Cloud shell and run these commands:
#   az login
#   az devops configure --defaults organization=https://dev.azure.com/yourorg/
#   az devops configure --defaults project='yourProjectName'
#   az pipelines variable-group create --name CodeSigning --variables SubscriptionName=<serviceConnectionName> KeyVaultUrl=https://<yourCertVaultName>.vault.azure.net/ CertName=<certName> SigningAppRegAppId=<appId> SigningAppRegClientSecret=<clientSecret> ActiveDirectoryTenantId=<tenantId> TimestampUrl=: http://timestamp.digicert.com
# ------------------------------------------------------------------------------------------------------------------------
parameters:
- name: environmentName
  default:  'DEV'
- name: blobPrefix
  default: 'Durable-Tester/'

# ------------------------------------------------------------------------------------------------------------------------
jobs:
- deployment: DeployFiles
  displayName: 'Download Artifacts'
  environment: 'DEV'
  
- job: AzureFileCopy
  displayName: 'Copy Files to Azure Storage'

  variables:
    - group: CodeSigning
    # Bring in environment common variable file
    - template: ../../vars/var-common.yml
    - template: ../../vars/var-source-location-console.yml
    # Bring in environment specific variable files
    - ${{ if eq(lower(parameters.environmentName), 'demo') }}:
      - template: ../../vars/var-demo.yml
    - ${{ if eq(lower(parameters.environmentName), 'dev') }}:
      - template: ../../vars/var-dev.yml
    - ${{ if eq(lower(parameters.environmentName), 'qa') }}:
      - template: ../../vars/var-qa.yml
    - ${{ if eq(lower(parameters.environmentName), 'prod') }}:
      - template: ../../vars/var-prod.yml
    - name: environmentNameLower
      value: ${{ lower(parameters.environmentName) }}
    - name: blobPrefix
      value: ${{ parameters.blobPrefix }}

  steps:
  - task: DownloadBuildArtifacts@0
    displayName: 'Download Artifacts'
    inputs:
      buildType: 'current'
      downloadType: 'single'
      downloadPath: '$(System.ArtifactsDirectory)'
      artifactName: 'drop'

  - bash: |
      storageFolderName=$(echo "downloads$(environmentNameLower)" | tr '[:upper:]' '[:lower:]')
      echo "##vso[task.setvariable variable=storageFolderName]$storageFolderName"
    displayName: 'Create Variables'
    continueOnError: true

  - task: CmdLine@2
    inputs:
      script: |
        echo "environmentNameLower=$(environmentNameLower)"
        echo "SubscriptionName=$(SubscriptionName)"
        echo "storageAccountName=$(storageAccountName)"
        echo "storageFolderName=$(storageFolderName)"
        echo "blobPrefix=$(blobPrefix)"
        echo "----------------------------------------"
        echo "##[group]Display All Environment Variables:"
        printenv | sort
        echo "##[endgroup]"
        echo "----------------------------------------"
        echo "##[group]Directory of pipeline workspace:"
        tree $(System.ArtifactsDirectory)
        dir $(System.ArtifactsDirectory) /s
        echo "##[endgroup]"
    displayName: 'Display Variables and Tree'
    continueOnError: true

  - task: AzureFileCopy@4
    displayName: 'AzureFileCopy: win-x64'
    inputs:
      SourcePath: '$(System.ArtifactsDirectory)/drop/win-x64'
      azureSubscription: $(SubscriptionName)
      Destination: AzureBlob
      storage: $(storageAccountName)
      ContainerName: $(storageFolderName)
      BlobPrefix: $(blobPrefix)
      sasTokenTimeOutInMinutes: 240

  - task: AzureFileCopy@4
    displayName: 'AzureFileCopy: Linux'
    inputs:
      SourcePath: '$(System.ArtifactsDirectory)/drop/Linux'
      azureSubscription: $(SubscriptionName)
      Destination: AzureBlob
      storage: $(storageAccountName)
      ContainerName: $(storageFolderName)
      BlobPrefix: $(blobPrefix)
      sasTokenTimeOutInMinutes: 240
