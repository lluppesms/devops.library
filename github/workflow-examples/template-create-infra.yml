# ------------------------------------------------------------------------------------------------------------------------
# GHA Reusable Called Workflow to deploy Azure Resources Only
# ------------------------------------------------------------------------------------------------------------------------
# You need to set up secrets in the GitHub Secrets Repository before running these workflows.
#   See Docs\CreateGitHubSecrets\.md for details
# ------------------------------------------------------------------------------------------------------------------------
name: template.deploy.infra
run-name: Deploy Infra
on:
  workflow_call:
    inputs:
      envCode:
        required: true
        type: string
      location:
        required: false
        type: string
      storageSku:
        required: false
        type: string
      functionAppSku:
        required: false
        type: string
      functionAppSkuFamily:
        required: false
        type: string
      functionAppSkuTier:
        required: false
        type: string

# ------------------------------------------------------------------------------------------------------------------------
jobs:
  deploy:
    name: Create Infra
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.envCode }}
    
    env:
      generatedAppEnvName: ${{ secrets.APP_NAME }}-${{ inputs.envCode }}
      generatedResourceGroupName: rg-${{ secrets.APP_NAME }}-${{ inputs.envCode }}

    steps:
    - name: Display Variables
      run: |-
        echo "generatedAppEnvName=${{ env.generatedAppEnvName }}"
        echo "generatedResourceGroupName=${{ env.generatedResourceGroupName }}"
        echo "appName=${{ secrets.APP_NAME }}"
        echo "location=${{ inputs.location }}"
        echo "storageSku=${{ inputs.storageSku }}"
        echo "functionAppSku=${{ inputs.functionAppSku }}"
        echo "functionAppSkuFamily=${{ inputs.functionAppSkuFamily }}"
        echo "functionAppSkuTier=${{ inputs.functionAppSkuTier }}"
        echo "Resource Group Command:"
        echo "  az group create --name ${{ env.generatedResourceGroupName }} --location ${{ inputs.location }} --tags Application=${{ secrets.APP_NAME }} Environment=${{ inputs.envCode }}"
        echo "Bicep Deploy Sample Command:"
        echo "  az deployment group create -n main-deploy-${{ env.runDateTimeZ }} --resource-group ${{ env.generatedResourceGroupName }} --template-file 'main.bicep' --parameters environment=${{ inputs.envCode }} location=${{ inputs.location }} appName=${{ secrets.APP_NAME }} keyVaultOwnerUserId=${{ env.keyVaultOwnerUserId }}"
        echo "Pipeline Workspace Directory Contents:"
        tree ${{ env.GITHUB_ACTION_PATH }}
      continue-on-error: true

    - name: Checkout Code
      uses: actions/checkout@main

    - name: List Files
      run: 
        tree ${{ env.GITHUB_ACTION_PATH }}
      continue-on-error: true

    - name: Log into Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create Resource Group
      run: 
        az group create --name ${{ env.generatedResourceGroupName }} --location ${{ inputs.location }} --tags Environment=${{ inputs.envCode }} Application=${{ secrets.APP_NAME }}

    - name: Deploy Azure Resources
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.generatedResourceGroupName }}
        template: infra/Bicep/main.bicep
        parameters: >
          environmentCode=${{ inputs.envCode }}
          location=${{ inputs.location }}
          appName=${{ secrets.APP_NAME }}
          keyVaultOwnerUserId=${{ secrets.KEYVAULT_OWNER_USERID }}
          storageSku=${{ inputs.storageSku }}
          functionAppSku=${{ inputs.functionAppSku }}
          functionAppSkuFamily=${{ inputs.functionAppSkuFamily }}
          functionAppSkuTier=${{ inputs.functionAppSkuTier }}
      